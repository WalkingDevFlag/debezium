services:
  debezium_tester_app:
    image: debezium_tester_app
    container_name: debezium_tester_app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    networks:
      - debezium-compose-network
    depends_on:
      kafka-debezium:
        condition: service_healthy
      connect-debezium:
        condition: service_started
      zookeeper-debezium:
        condition: service_started
      tester_db:
        condition: service_started

  zookeeper-debezium:
    image: debezium/zookeeper:1.4
    container_name: zookeeper-debezium
    hostname: zookeeper-debezium
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
    networks:
      - debezium-compose-network

  kafka-debezium:
    image: debezium/kafka:1.4
    container_name: kafka-debezium
    hostname: kafka-debezium
    ports:
     - 9092:9092
    links:
     - zookeeper-debezium
    environment:
     - ZOOKEEPER_CONNECT=zookeeper-debezium:2181
    networks:
      - debezium-compose-network
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -v grep | grep Kafka"]
      interval: 15s
      timeout: 10s
      retries: 10

  connect-debezium:
    image: debezium/connect:1.4
    container_name: connect-debezium
    hostname: connect-debezium
    ports:
     - 8083:8083
    links:
     - kafka-debezium
    environment:
     - BOOTSTRAP_SERVERS=kafka-debezium:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - debezium-compose-network

  tester_db:
    image: postgres
    hostname: tester_db
    container_name: tester_db
    shm_size: 4gb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - debezium-compose-network

  # Redpanda Console for monitoring Kafka
  console:
    image: docker.redpanda.com/redpandadata/console:v2.5.2
    container_name: console
    hostname: console
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        cat > /tmp/config.yml << 'EOF'
        kafka:
          brokers: ["kafka-debezium:9092"]
        connect:
          enabled: true
          clusters:
            - name: connect-debezium
              url: http://connect-debezium:8083
        EOF
        /app/console --config.filepath=/tmp/config.yml
    ports:
      - "8080:8080"
    networks:
      - debezium-compose-network
    depends_on:
      - kafka-debezium
      - connect-debezium

networks: 
  debezium-compose-network:
    driver: bridge

volumes:
  postgres_data: